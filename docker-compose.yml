version: "3.9"

services:
  web:
    image: siailyadev/skb-front:latest
    restart: always
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    healthcheck:
      test: curl -sS http://127.0.0.1:3000 || echo 1
      interval: 30s
      timeout: 3s
      retries: 12
    deploy:
      mode: global
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s

  auth:
    image: siailyadev/skb-auth:latest
    restart: always
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
    depends_on:
      - db
    healthcheck:
      test: curl -sS http://127.0.0.1:5000/api/auth/healthcheck || echo 1
      interval: 30s
      timeout: 3s
      retries: 12
    deploy:
      mode: global
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
    networks:
      - postgres

  db:
    image: postgres:13.2
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=skb123456789
      - POSTGRES_USER=skb
      - POSTGRES_DB=skb
    volumes:
      - skb-database:/var/lib/postgresql/data
    deploy:
      placement:
        constraints:
          - "node.role==manager"
    networks:
      - postgres

  pgadmin:
    image: dpage/pgadmin4:6.13
    environment:
      PGADMIN_DEFAULT_EMAIL: "sia.ilya.dev@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "skbPassword!2022"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - skb-pgAdmin:/var/lib/pgadmin
    ports:
      - "7000:80"
    restart: unless-stopped
    networks:
      - postgres
    deploy:
      placement:
        constraints:
          - "node.role==manager"

volumes:
  skb-database:
    external: true
  skb-pgAdmin:
    external: true

networks:
  postgres:
    driver: overlay
    attachable: true
